@page "/fetchdata"
@inject HttpClient Http
@inject IJSRuntime JS



<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<button @onclick="LoadData">Load Data</button>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
                <th>teste</th>
            </tr>
        </thead>
        <tbody>


            @{
                int cont = -1;
            }



            @foreach (var forecast in forecasts)
            {
                cont++;
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                    <td><button @onclick="() => ShowInfo(forecast.ID)">Show Info</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        //forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    private async Task LoadData()
    {
        // TODO: receive spfx context object with site properties from spfx webpart
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("https://site.sharepoint.com/sites/TesteMR2/SiteAssets/blazorapp1/sample-data/weather.json");
    }

    private async Task ShowInfo(int id)
    {
        await JS.InvokeVoidAsync("MyAlert", id.ToString());
    }

    public class WeatherForecast
    {
        public int ID { get; set; }

        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
